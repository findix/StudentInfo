// Generated by CoffeeScript 1.7.1
(function() {
  var courseModel, express, mongoose, router;

  express = require("express");

  mongoose = require('mongoose');

  router = express.Router();

  courseModel = mongoose.model('Course');

  router.get("/", function(req, res) {
    var query;
    if (req.session.username == null) {
      res.redirect('/');
    }
    query = req.query.query;
    return courseModel.find({
      "$or": [
        {
          cname: new RegExp(query)
        }, {
          cno: new RegExp(query)
        }, {
          teacher: new RegExp(query)
        }
      ]
    }, null, {
      sort: {
        'cno': 1
      }
    }, function(err, data) {
      if (err != null) {
        console.log(err);
      }
      return res.render('course', {
        courses: data,
        username: req.session.username,
        query: query,
        status: ''
      });
    });
  });

  router.post("/add", function(req, res) {
    var courseEntity, _cname, _cno, _credit, _teacher;
    if (req.session.username == null) {
      res.redirect('/');
    }
    _cno = req.body.cno;
    _cname = req.body.cname;
    _credit = req.body.credit;
    _teacher = req.body.teacher;
    courseEntity = new courseModel({
      cno: _cno,
      cname: _cname,
      credit: _credit,
      teacher: _teacher
    });
    courseEntity.save(function(err) {
      if (err != null) {
        return console.log(err);
      }
    });
    return res.redirect('/course');
  });

  router.get("/delete/:cid", function(req, res) {
    var cid;
    if (req.session.username == null) {
      res.redirect('/');
    }
    cid = req.params.cid;
    console.log(cid);
    courseModel.remove({
      _id: cid
    }, function(err) {
      if (err != null) {
        return console.log(err);
      }
    });
    return res.redirect('/course');
  });

  router.post("/update/:cid", function(req, res) {
    var cid, _cname, _cno, _credit, _teacher;
    if (req.session.username == null) {
      res.redirect('/');
    }
    cid = req.params.cid;
    _cno = req.body.cno;
    _cname = req.body.cname;
    _credit = req.body.credit;
    _teacher = req.body.teacher;
    courseModel.findByIdAndUpdate(cid, {
      cno: _cno,
      cname: _cname,
      credit: _credit,
      teacher: _teacher
    }, function(err) {
      if (err != null) {
        return console.log(err);
      }
    });
    return res.redirect('/course');
  });

  module.exports = router;

}).call(this);

//# sourceMappingURL=course.map
