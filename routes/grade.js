// Generated by CoffeeScript 1.7.1
(function() {
  var courseModel, express, gradeModel, mongoose, router;

  express = require("express");

  mongoose = require('mongoose');

  router = express.Router();

  gradeModel = mongoose.model("Grade");

  courseModel = mongoose.model("Course");

  router.get("/", function(req, res) {
    if (req.session.username == null) {
      res.redirect('/');
    }
    return res.redirect('/student');
  });

  router.get("/:sid", function(req, res) {
    var sid;
    if (req.session.username == null) {
      res.redirect('/');
    }
    sid = req.params.sid;
    return gradeModel.find({
      student: sid
    }, null, {
      sort: {
        'course.cno': 1
      }
    }, function(err, data) {
      if (err != null) {
        console.log(err);
      }
      return courseModel.find().exec(function(err, courses) {
        return res.render('grade', {
          grades: data,
          username: req.session.username,
          status: '',
          sid: sid,
          courses: courses
        });
      });
    }).populate("course student");
  });

  router.post("/add", function(req, res) {
    var _cname, _cno, _score, _sid;
    if (req.session.username == null) {
      res.redirect('/');
    }
    _cno = req.body.cno;
    _cname = req.body.cname;
    _score = req.body.score;
    _sid = req.body.sid;
    return courseModel.findOne({
      cno: _cno
    }, function(err, data) {
      var gradeEntity;
      if (err != null) {
        console.log(err);
      }
      gradeEntity = new gradeModel({
        student: _sid,
        course: data._id,
        score: _score
      });
      gradeEntity.save(function(err) {
        if (err != null) {
          return console.log(err);
        }
      });
      return res.redirect("/grade/" + _sid);
    });
  });

  router.get("/delete/:gid/:sid", function(req, res) {
    var gid, sid;
    if (req.session.username == null) {
      res.redirect('/');
    }
    gid = req.params.gid;
    sid = req.params.sid;
    console.log(gid);
    gradeModel.remove({
      _id: gid
    }, function(err) {
      if (err != null) {
        return console.log(err);
      }
    });
    return res.redirect("/grade/" + sid);
  });

  router.post("/update/:gid", function(req, res) {
    var gid, _cname, _cno, _score, _sid;
    if (req.session.username == null) {
      res.redirect('/');
    }
    gid = req.params.gid;
    _cno = req.body.cno;
    _cname = req.body.cname;
    _score = req.body.score;
    _sid = req.body.sid;
    courseModel.findOne({
      cno: _cno
    }, function(err, data) {
      if (err != null) {
        console.log(err);
      }
      return gradeModel.findByIdAndUpdate(gid, {
        student: _sid,
        course: data._id,
        score: _score
      }, function(err) {
        if (err != null) {
          return console.log(err);
        }
      });
    });
    return res.redirect("/grade/" + _sid);
  });

  router.get("/average/:cid", function(req, res) {
    var cid;
    if (req.session.username == null) {
      res.redirect('/');
    }
    cid = req.params.cid;
    return gradeModel.find({
      course: cid
    }, function(err, data) {
      var datum, sum, _i, _len;
      sum = 0;
      for (_i = 0, _len = data.length; _i < _len; _i++) {
        datum = data[_i];
        sum += datum.score;
      }
      return res.send((sum / data.length) + '');
    });
  });

  module.exports = router;

}).call(this);

//# sourceMappingURL=grade.map
